// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model movie {
  id          BigInt     @id @default(autoincrement())
  title       String
  durationMin Int
  rating      String?
  createdAt   DateTime   @default(now())
  showtime    showtime[]
}

model order {
  id          BigInt    @id @default(autoincrement())
  refCode     String    @unique
  status      String
  totalAmount Float
  discountAmt Float     @default(0)
  promoCode   String?
  paidAt      DateTime?
  createdAt   DateTime  @default(now())

  // ความสัมพันธ์กับรอบฉาย
  showtime   showtime @relation(fields: [showtimeId], references: [id])
  showtimeId BigInt

  // ผู้สั่งซื้อ
  user   user?   @relation(fields: [userId], references: [id])
  userId BigInt?

  // อีเมลผู้ซื้อ (guest ก็เก็บได้)
  buyerEmail String?

  // ตั๋วที่ออกจากคำสั่งซื้อนี้
  tickets ticket[]

  // บันทึกการใช้โปรฯ
  promotionredemption promotionredemption[]

  @@index([showtimeId])
  @@index([userId])
}

model passwordresettoken {
  id        BigInt   @id @default(autoincrement())
  userId    BigInt
  token     String   @unique
  expiresAt DateTime
  used      Boolean  @default(false)
  createdAt DateTime @default(now())

  user user @relation(fields: [userId], references: [id])

  @@index([userId])
}

model seatlock {
  showtimeId  BigInt
  seatLabel   String
  lockedUntil DateTime
  refCode     String

  showtime showtime @relation(fields: [showtimeId], references: [id])

  @@id([showtimeId, seatLabel])
}

model showtime {
  id        BigInt   @id @default(autoincrement())
  movieId   BigInt
  theater   String
  startsAt  DateTime
  basePrice Decimal  @db.Decimal(10, 2)

  order    order[]
  seatlock seatlock[]

  movie movie @relation(fields: [movieId], references: [id])

  @@unique([movieId, startsAt, theater])
  @@index([movieId])
  @@index([startsAt])
}

model ticket {
  id        BigInt   @id @default(autoincrement())
  seatLabel String
  price     Float
  createdAt DateTime @default(now())

  order   order  @relation(fields: [orderId], references: [id])
  orderId BigInt

  @@index([orderId])
}

model user {
  id           BigInt   @id @default(autoincrement())
  email        String   @unique
  passwordHash String
  displayName  String?
  role         Role     @default(USER)
  createdAt    DateTime @default(now())

  orders              order[]
  passwordresettoken  passwordresettoken[]
  promotionredemption promotionredemption[]
}

model promotion {
  id           BigInt    @id @default(autoincrement())
  code         String    @unique
  type         String
  value        Float
  maxDiscount  Float?
  minSpend     Float?
  startsAt     DateTime?
  endsAt       DateTime?
  usageLimit   Int?
  usagePerUser Int?
  active       Boolean   @default(true)
  createdAt    DateTime  @default(now())

  redemptions promotionredemption[]
}

model promotionredemption {
  id          BigInt   @id @default(autoincrement())
  promotionId BigInt
  userId      BigInt?
  orderId     BigInt?
  email       String?
  redeemedAt  DateTime @default(now())

  promotion promotion @relation(fields: [promotionId], references: [id])
  user      user?     @relation(fields: [userId], references: [id])
  order     order?    @relation(fields: [orderId], references: [id])

  @@index([promotionId])
  @@index([userId])
  @@index([orderId])
}
